@model IEnumerable<TicTacTOe.Models.ApplicationUser>
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Wallet)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Wallet)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                </td>*@

            <td>
                @using (Html.BeginForm())
                {
                    <button class="btn-default" type="button" data-toggle="modal" data-target="#sendRequestModal" onclick="changeOpponentID('@item.Id')">Play</button>
                }
            </td>
        </tr>
    }

</table>

<div id="sendRequestModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="sendRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sendRequestModalLabel">Update Brand</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div>
                <form action="http://localhost:44321/Game/Process" method="POST">
                    <div class="modal-body">
                        <div class="container">
                            <input type="hidden" name="PlayerId" id="PlayerId" value="@User.Identity.GetUserId()">
                            <input type="hidden" name="OpponentId" id="OpponentId">
                            <div class="form-group">
                                <label for="Height">Height</label>
                                <input type="number" class="form-control" name="Height" id="Height">
                            </div>
                            <div class="form-group">
                                <label for="Bet">Bet</label>
                                <input type="number" class="form-control" name="Bet" id="Bet">
                            </div>
                        </div>
                    </div>


                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <a href="http://localhost:44321/Game/Process">
                            <button type="button" class="btn btn-danger" >Send</button>
                        </a>
                    </div>
                </form>
            </div>

            <div id="results"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function OnSuccess(data) {
        var results = $('#results'); // получаем нужный элемент
        results.empty(); //очищаем элемент
        console.log(data)
        for (var i = 0; i < data.length; i++) {
            results.append('<li>' + data[i] + '</li>'); // добавляем данные в список
        }
    }
</script>

<script type="text/javascript">
    const changeOpponentID = (id) => {
        alert("")
        document.getElementById('OpponentId').value = id;
    }

    // Пример отправки POST запроса:
    async function postData(url = '', data) {
        // Default options are marked with *
        alert(data);
        const response = await fetch(url, {
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, *cors, same-origin
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, *same-origin, omit
            headers: {
                'Content-Type': 'application/json'
                // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            redirect: 'follow', // manual, *follow, error
            referrerPolicy: 'no-referrer', // no-referrer, *client
            body: JSON.stringify(data) // body data type must match "Content-Type" header
        });
        return await response.json(); // parses JSON response into native JavaScript objects
    }





    const sendRequest = () => {
        const Height = document.getElementById('Height').value;
        const Bet = document.getElementById('Bet').value;
        const PlayerId = document.getElementById('PlayerId').value;
        const OpponentId = document.getElementById('OpponentId').value;


        alert("Height = " + Height)
        //const data = {
        //    Height: Height,
        //    Bet: Bet,
        //    PlayerId: PlayerId,
        //    OpponentId: OpponentId
        //}

        const data = new FormData();
        data.append("Height", Height);
        data.append("Bet", Bet);
        data.append("PlayerId", PlayerId);
        data.append("OpponentId", OpponentId);

        for (var pair of data.entries()) {
            console.log(pair[0] + ', ' + pair[1]);
        }

        alert("Height DAta = " + data.Height)
        postData('@Url.Action("SendRequest", "Home")', data)
            .then((data) => {
                console.log("data = " + data); // JSON data parsed by `response.json()` call
            });
    }
</script>

@Scripts.Render("~/scripts/jquery-1.10.2.min.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")